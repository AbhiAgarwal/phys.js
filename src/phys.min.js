(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){about=exports;about.understand=function(){return"Name: The name of the Function\n"+"Inputs: The inputs you need for the Function\n"+"Equation: The mathematical equation of the Function"}},{}],2:[function(require,module,exports){mechanics=exports;mechanics.momentum=function(){return"The Momentum Function\n"+"Inputs are: Mass & Velocity.\n"+"Momentum = Mass * Velocity."};mechanics.force=function(){return"The Force Function\n"+"Input is: Mass.\n"+"Force = Mass * Acceleration."};mechanics.cForce=function(){return"The Calculated Force Function\n"+"Inputs are: Mass, and Acceleration.\n"+"Force = Mass * Acceleration."};mechanics.forceMomentum=function(){return"The Force Equation - using Momentum\n"+"Inputs are: Initial Momentum, Final Momentum, Initial Time, Final Time.\n"+"Force = (Final Momentum - Initial Momentum) / (Final Time - Initial Time)"};mechanics.cForceMomentum=function(){return"The Calculated Force Equation - using Momentum\n"+"Inputs are: Initial Momentum: Initial Velocity, Initial Mass, Final Momentum: Final Velocity, Finaly Mass, Initial Time, Final Time.\n"+"Force = (Momentum(Final Mass, Final Velocity) - Momentum(Initial Mass, Initial Velocity)) / (Final Time - Initial Time)"};mechanics.SUVATuta=function(){return"The SUVAT Displacement Function\n"+"Inputs are: Initial Velocity, Time, Acceleration.\n"+"Displacement = Initial Velocity * Time + 1/2 * Acceleration * Time^2"};mechanics.SUVATuvt=function(){return"The SUVAT Displacement Function\n"+"Inputs are: Initial Velocity, Final Velocity, Time.\n"+"Displacement = 1 / 2 * (Initial Velocity + Final Velocity) * Time"};mechanics.SUVATvta=function(){return"The SUVAT Displacement Function\n"+"Inputs are: Acceleration, Final Velocity, Time.\n"+"Displacement = Final Velocity * Time - (1 / 2 * Acceleration * Time^2)"};mechanics.SUVATuat=function(){return"The SUVAT Velocity Function\n"+"Inputs are: Initial Velocity, Acceleration, Time.\n"+"Velocity = Initial Velocity + (Acceleration * Time)"};mechanics.SUVATuas=function(){return"The SUVAT Velocity Function\n"+"Inputs are: Initial Velocity, Acceleration, Displacement.\n"+"Velocity^2 = (Initial Velocity)^2 + (2 * Acceleration * Displacement)"};mechanics.cSUVATuas=function(){return"The SUVAT Velocity Function\n"+"Inputs are: Initial Velocity, Acceleration, Displacement.\n"+"Velocity = SquareRoot((Initial Velocity)^2 + (2 * Acceleration * Displacement))"};mechanics.impulseMass=function(){return"The Impuse Function - using Mass\n"+"Inputs are: Mass, Initial Velocity, Final Velocity.\n"+"Impulse = Mass * (Final Velocity - Initial Velocity)"};mechanics.impulseForce=function(){return"The Impuse Function - using Force\n"+"Inputs are: Force, Initial Time, Final Time.\n"+"Impulse = Force * (Final Time - Initial Time)"};mechanics.workDone=function(){return"The Work Done Function\n"+"Inputs are: Force, Displacement, Angle.\n"+"Work Done = Force * Displacement * cos(Angle)"};mechanics.kineticVelocity=function(){return"The Kinetic Energy Equation - with Velocity\n"+"Inputs are: Velocity, Mass.\n"+"Kinetic Energy = 1/2 * Mass * Velocity^2"};mechanics.kineticMomentum=function(){return"The Kinetic Energy Equation - with Momentum\n"+"Inputs are: Momentum, Mass.\n"+"Kinetic Energy = Momentum^2 * (2 * Mass)"};mechanics.cKineticMomentum=function(){return"The Calculated Kinetic Energy Equation - with Momentum\n"+"Inputs are: Velocity, Mass.\n"+"Kinetic Energy = Momentum(Mass, Velocity) * (2 * Mass)"};mechanics.potential=function(){return"The Potential Energy Equation\n"+"Inputs are: Mass, Initial Height, Final Height.\n"+"Potential Energy = Mass * Gravitational Constant * (Final Height - Initial Height)"};mechanics.cPotential=function(){return"The Calculated Potential Energy Equation\n"+"Inputs are: Mass, Gravitational Constant, Initial Height, Final Height.\n"+"Potential Energy = Mass * Gravitational Constant * (Final Height - Initial Height)"};mechanics.power=function(){return"The Power Equation\n"+"Inputs are: Force, Velocity.\n"+"Power = Force * Velocity"};mechanics.centripetalVelocity=function(){return"The Centripetal Acceleration Equation - with Velocity\n"+"Inputs are: Velocity, Radius.\n"+"Centripetal Acceleration = Velocity^2 / Radius"};mechanics.cCentripetalVelocity=function(){return"The Calculated Centripetal Acceleration Equation - with Velocity\n"+"Inputs are: Velocity^2, Radius.\n"+"Centripetal Acceleration = Velocity / Radius"};mechanics.centripetalTime=function(){return"The Centripetal Acceleration Equation - with Time\n"+"Inputs are: Radius, Time.\n"+"Centripetal Acceleration = (4 * Pi^2 * Radius) / (Time^2)"};mechanics.cCentripetalTime=function(){return"The Calculated Centripetal Acceleration Equation - with Time\n"+"Inputs are: Radius, Time.\n"+"Centripetal Acceleration = (4 * Pi^2 * Radius) / (Time^2)"}},{}],3:[function(require,module,exports){suvat=exports;suvat.SUVAT=function(){return"SUVAT Equation\n"+"S: Displacement (m)\n"+"U: Initial Velocity (m/s)\n"+"V: Final Velocity (m/s)\n"+"A: Acceleration (m/s^2)\n"+"T: Time (s)"};suvat.create=function(){return"Initialize SUVAT Equation\n"+"Inputs are: S: Displacement (m), U: Initial Velocity (m/s), V: Final Velocity (m/s), A: Acceleration (m/s^2), T: Time (s)\n"+"Only 3 inputs of the above are required."};suvat.solve=function(){return"Solve SUVAT Equations\n"+"Inputs are: None\n"+"Returns Solved Equation Result"}},{}],4:[function(require,module,exports){thermal=exports;thermal.pressure=function(){return"Pressure Equation\n"+"Inputs are: Force, Area\n"+"Pressure = Force / Area"};thermal.heat=function(){return"Heat Equation\n"+"Inputs are: Mass, Specific Heat Capacity, Change in Temperature\n"+"Heat = Mass * Specific Heat Capacity, Change in Temperature"};thermal.cHeat=function(){return"Calculated Heat Equation\n"+"Inputs are: Mass, Specific Heat Capacity, Initial Time, Final Time\n"+"Heat = Mass * Specific Heat Capacity, (Final Time - Initial Time)"};thermal.latentHeat=function(){return"Latent Heat Equation\n"+"Inputs are: Mass, Latent Heat of Fusion or Vaporization\n"+"Heat = Mass * Latent Heat of Fusion or Vaporization"};thermal.idealGasPV=function(){return"Ideal Gas Equation\n"+"Inputs are: Number of Moles, Temperature\n"+"Pressure * Volume = Number of Moles * Gas Constant * Time"};thermal.work=function(){return"Work Done Equation\n"+"Inputs are: Pressure, Volume\n"+"Work = Pressure * Volume"};thermal.cWork=function(){return"Calculated Work Done Equation\n"+"Inputs are: Pressure, Initial Volume, Final Volume\n"+"Work = Pressure * (Final Volume - Initial Volume)"};thermal.heatChange=function(){return"Heat Change Equation\n"+"Inputs are: Work Done, Internal Energy Change\n"+"Heat = Change in Energy Change * Work Done"};thermal.cHeatChange=function(){return"Calculated Heat Change Equation\n"+"Inputs are: Work Done, Initial Energy Change, Final Energy Change\n"+"Heat = (Final Energy Change - Initial Energy Change) * Work Done"}},{}],5:[function(require,module,exports){var phys=exports;phys.constants=require("./phys/constants/constants");phys.multiplier=require("./phys/constants/multiplier");phys.units=require("./phys/constants/units");phys.shc=require("./phys/constants/shc");phys.information=require("./information/about");phys.information.mechanics=require("./information/mechanics");phys.information.suvat=require("./information/suvat");phys.information.thermal=require("./information/thermal");phys.basic=require("./phys/basic");phys.mechanics=require("./phys/mechanics");phys.thermal=require("./phys/thermal");phys.wave=require("./phys/wave");phys.fields=require("./phys/fields");phys.suvat=require("./phys/mechanics_suvat")},{"./information/about":1,"./information/mechanics":2,"./information/suvat":3,"./information/thermal":4,"./phys/basic":6,"./phys/constants/constants":7,"./phys/constants/multiplier":8,"./phys/constants/shc":9,"./phys/constants/units":10,"./phys/fields":11,"./phys/mechanics":12,"./phys/mechanics_suvat":13,"./phys/thermal":14,"./phys/wave":15}],6:[function(require,module,exports){var basic=exports;basic.changein=function(p1,p2,callback){var ans=p2-p1;if(typeof callback==="function"){callback(ans);return ans}return ans};basic.twosig=function(number,callback){var ans=number.toFixed(2);if(typeof callback==="function"){callback(ans);return ans}return ans};basic.toDegrees=function(radians,callback){var degrees=radians*(180/Math.PI);if(typeof callback==="function"){callback(degrees);return degrees}return degrees};basic.toRadians=function(degrees,callback){var radians=degrees*(Math.PI/180);if(typeof callback==="function"){callback(radians);return radians}return radians}},{}],7:[function(require,module,exports){var constants=exports;var multiplier=require("./multiplier");constants.gAcceleration=9.81;constants.gAccelerationUnit="ms^-2";constants.GravitationalConstant=6.67*Math.pow(10,-11);constants.GravitationalConstantUnit="Nm^2kg^-2";constants.AvogadrosConstant=6.02*Math.pow(10,23);constants.AvogadrosConstantUnit="mol^-1";constants.GasConstant=8.31;constants.GasConstantUnit="J/K^-1mol^-1";constants.BoltzmannsConstant=1.38*Math.pow(10,-23);constants.BoltzmannsConstantUnit="JK^-1";constants.StefanBoltzmannConstant=5.67*Math.pow(10,-8);constants.StefanBoltzmannConstantUnit="Wm^-2K^-4";constants.CoulombConstant=8.99*Math.pow(10,9);constants.CoulombConstantUnit="Nm^2C^-2";constants.PermittivityFreeSpace=8.85*Math.pow(10,-12);constants.PermittivityFreeSpaceUnit="C^2N^-1m^-2";constants.PermeabilityFreeSpace=4*Math.PI*Math.pow(10,-7);constants.PermeabilityFreeSpaceUnit="TmA^-1";constants.SpeedofLightVacuum=3*Math.pow(10,8);constants.SpeedofLightVacuumUnit="ms^-1";constants.PlancksConstant=6.63*Math.pow(10,-34);constants.PlancksConstantUnit="Js";constants.ElementaryCharge=1.6*Math.pow(10,-19);constants.ElementaryChargeUnit="C";constants.ElectronRestMassKG=9.11*Math.pow(10,-31);constants.ElectronRestMassKGUnit="kg";constants.ElectronRestMassU=549e-6;constants.ElectronRestMassUUnit="u";constants.ElectronRestMasseV=.511*multiplier.M;constants.ElectronRestMasseVUnit="eVc^-2";constants.ProtonRestMassKG=1.673*Math.pow(10,-27);constants.ProtonRestMassKGUnit="kg";constants.ProtonRestMassU=1.007276;constants.ProtonRestMassUUnit="u";constants.ProtonRestMasseV=938*multiplier.M;constants.ProtonRestMasseVUnit="eVc^-2";constants.NeutronRestMassKG=1.675*Math.pow(10,-27);constants.NeutronRestMassKGUnit="kg";constants.NeutronRestMassU=1.008665;constants.NeutronRestMassUUnit="u";constants.NeutronRestMasseV=940*multiplier.M;constants.NeutronRestMasseVUnit="eVc^-2";constants.UnifiedAtomicMassKG=1.661*Math.pow(10,-27);constants.UnifiedAtomicMassKGUnit="kg";constants.UnifiedAtomicMasseV=931.5*multiplier.M;constants.UnifiedAtomicMasseVUnit="eVc^-2"},{"./multiplier":8}],8:[function(require,module,exports){var multiplier=exports;multiplier.T=Math.pow(10,12);multiplier.G=Math.pow(10,9);multiplier.M=Math.pow(10,6);multiplier.k=Math.pow(10,3);multiplier.h=Math.pow(10,2);multiplier.da=Math.pow(10,1);multiplier.d=Math.pow(10,-1);multiplier.c=Math.pow(10,-2);multiplier.m=Math.pow(10,-3);multiplier.u=Math.pow(10,-6);multiplier.n=Math.pow(10,-9);multiplier.p=Math.pow(10,-12);multiplier.f=Math.pow(10,-15)},{}],9:[function(require,module,exports){var shc=exports},{}],10:[function(require,module,exports){var units=exports,multiplier=require("./multiplier");units.lightyear=9.46*Math.pow(10,15);units.lightyearUnit="m";units.parsec=3.261;units.parsecUnit="y";units.astronomical=1.5*Math.pow(10,11);units.astronomicalUnit="m";units.radian=180/Math.Pi;units.radianUnit="Degrees";units.kilowatthour=3.6*Math.pow(10,6);units.kilowatthourUnit="J";units.atmNM=1.01*Math.pow(10,5);units.atmNMUnit="Nm^-2";units.atmPa=101*multiplier.k;units.atmPaUnit="Pa";units.atmHG=760;units.atmHGUnit="mmHg"},{"./multiplier":8}],11:[function(require,module,exports){var constant=require("./constants/constants");var units=require("./constants/units");var multiplier=require("./constants/multiplier");var basic=require("./basic");var fields=exports;fields.gravitationalForce=function(mone,mtwo,r,callback){var ans=constant.GravitationalConstant*(mone*mtwo/r);if(typeof callback==="function"){callback(ans);return ans}return ans};fields.cGravitationalForce=function(mone,mtwo,r,callback){var ans=constant.GravitationalConstant*(mone*mtwo/Math.pow(r,2));if(typeof callback==="function"){callback(ans);return ans}return ans};fields.CoulombForce=function(qone,qtwo,r,callback){var ans=constant.CoulombConstant*(qone*qtwo/r);if(typeof callback==="function"){callback(ans);return ans}return ans};fields.cCoulombForce=function(qone,qtwo,r,callback){var ans=constant.CoulombConstant*(qone*qtwo/Math.pow(r,2));if(typeof callback==="function"){callback(ans);return ans}return ans};fields.gravitationalAcceleration=function(F,m,callback){var ans=F/m;if(typeof callback==="function"){callback(ans);return ans}return ans};fields.electricField=function(F,q,callback){var ans=F/q;if(typeof callback==="function"){callback(ans);return ans}return ans};fields.gradElectricField=function(v1,v2,x1,x2,callback){var ans=-1*basic.changein(v1,v2)/basic.changein(x1,x2);if(typeof callback==="function"){callback(ans);return ans}return ans};fields.gradGravField=function(u1,u2,x1,x2,callback){var ans=-1*basic.changein(u1,u2)/basic.changein(x1,x2);if(typeof callback==="function"){callback(ans);return ans}return ans};fields.particleMagneticForce=function(q,v,B,theta,callback){var ans=q*v*B*Math.sin(basic.toRadians(theta));if(typeof callback==="function"){callback(ans);return ans}return ans};fields.conductorMagneticForce=function(B,I,l,theta,callback){var ans=B*I*l*Math.sin(basic.toRadians(theta,callback));if(typeof callback==="function"){callback(ans);return ans}return ans};fields.particleGravitationalPotentialEnergy=function(m,M,r,callback){var ans=-1*constant.GravitationalConstant*(m*M/r);if(typeof callback==="function"){callback(ans);return ans}return ans};fields.gravitationalPotentialEnergy=function(M,r,callback){var ans=-1*constant.GravitationalConstant*(M/r);if(typeof callback==="function"){callback(ans);return ans}return ans};fields.escapeVelocity=function(M,r,callback){var ans=Math.sqrt(2*constant.GravitationalConstant*(M/r));if(typeof callback==="function"){callback(ans);return ans}return ans};fields.chargeElectricPotentialEnergy=function(Q,q,r,callback){var ans=basic.CoulombConstant*(Q*q/r);if(typeof callback==="function"){callback(ans);return ans}return ans};fields.electricPotentialEnergy=function(Q,r,callback){var ans=basic.CoulombConstant*(Q/r);if(typeof callback==="function"){callback(ans);return ans}return ans}},{"./basic":6,"./constants/constants":7,"./constants/multiplier":8,"./constants/units":10}],12:[function(require,module,exports){var constant=require("./constants/constants");var units=require("./constants/units");var multiplier=require("./constants/multiplier");var basic=require("./basic");var mechanics=exports;mechanics.momentum=function(m,v,callback){var ans=m*v;if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.force=function(m,callback){var ans=m*constant.gAcceleration;if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.cForce=function(m,g,callback){var ans=m*g;if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.forceMomentum=function(p1,p2,t1,t2,callback){var ans=basic.changein(p1,p2)/basic.changein(t1,t2);if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.cForceMomentum=function(m1,v1,m2,v2,t1,t2,callback){var ans=basic.changein(mechanics.momentum(m1,v1),mechanics.momentum(m2,v2))/basic.changein(t1,t2);if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.SUVATuta=function(u,t,a,callback){var ans=u*t+1/2*a*Math.pow(t,2);if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.SUVATuvt=function(u,v,t,callback){var ans=1/2*((u+v)*t);if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.SUVATvta=function(v,t,a,callback){var ans=v*t-1/2*a*Math.pow(t,2);if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.SUVATuat=function(u,a,t,callback){var ans=u+a*t;if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.SUVATuas=function(u,a,s,callback){var ans=Math.pow(u,2)+2*a*s;if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.cSUVATuas=function(u,a,s,callback){var ans=Math.sqrt(mechanics.SUVATuas(u,a,s));if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.impulseMass=function(m,v1,v2,callback){var ans=m*basic.changein(v1,v2);if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.impulseForce=function(f,t1,t2,callback){var ans=f*basic.changein(t1,t2);if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.workDone=function(f,s,angle,callback){var ans=f*s*Math.cos(angle);if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.kineticVelocity=function(v,m,callback){var ans=1/2*m*Math.pow(v,2);if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.kineticMomentum=function(p,m,callback){var ans=Math.pow(p,2)/(2*m);if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.cKineticMomentum=function(v,m,callback){var ans=Math.pow(mechanics.momentum(m,v),2)/(2*m);if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.potential=function(m,h1,h2,callback){var ans=m*constant.gAcceleration*basic.changein(h1,h2);if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.cPotential=function(m,g,h1,h2,callback){var ans=m*g*basic.changein(h1,h2);if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.power=function(f,v,callback){var ans=f*v;if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.centripetalVelocity=function(v,r,callback){var ans=Math.pow(v,2)/r;if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.cCentripetalVelocity=function(v,r,callback){var ans=v/r;if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.centripetalTime=function(r,t,callback){var ans=4*Math.pow(Math.PI,2)*r/Math.pow(t,2);if(typeof callback==="function"){callback(ans);return ans}return ans};mechanics.cCentripetalTime=function(r,t,callback){var ans=4*Math.pow(Math.PI,2)*r/t;if(typeof callback==="function"){callback(ans);return ans}return ans}},{"./basic":6,"./constants/constants":7,"./constants/multiplier":8,"./constants/units":10}],13:[function(require,module,exports){var constant=require("./constants/constants");var units=require("./constants/units");var multiplier=require("./constants/multiplier");var basic=require("./basic");var mechanics=require("./mechanics");var suvat=exports;var equation={s:null,u:null,v:null,a:null,t:null};suvat.create=function(s,u,v,a,t){if(s!=null){equation.s=s}if(u!=null){equation.u=u}if(v!=null){equation.v=v}if(a!=null){equation.a=a}if(t!=null){equation.t=t}};suvat.solve=function(){if(equation.s==null&&equation.u==null&&equation.v==null&&equation.a==null&&equation.t==null){console.log("Library hasn't been initialized - use suvat.create(...)");return null}else if(equation.u!=null&&equation.t!=null&&equation.a!=null){return mechanics.SUVATuta(equation.u,equation.t,equation.a)}else if(equation.u!=null&&equation.v!=null&&equation.t!=null){return mechanics.SUVATuvt(equation.u,equation.v,equation.t)}else if(equation.v!=null&&equation.t!=null&&equation.a!=null){return mechanics.SUVATvta(equation.v,equation.t,equation.a)}else if(equation.u!=null&&equation.a!=null&&equation.t!=null){return mechanics.SUVATuat(equation.u,equation.a,equation.t)}else if(equation.u!=null&&equation.a!=null&&equation.s!=null){return mechanics.SUVATuas(equation.u,equation.a,equation.s)}else{console.log("Inputs don't match the required specifications");return null}}},{"./basic":6,"./constants/constants":7,"./constants/multiplier":8,"./constants/units":10,"./mechanics":12}],14:[function(require,module,exports){var constant=require("./constants/constants");var units=require("./constants/units");var multiplier=require("./constants/multiplier");var basic=require("./basic");var thermal=exports;thermal.pressure=function(f,a,callback){var ans=f/a;if(typeof callback==="function"){callback(ans);return ans}return ans};thermal.heat=function(m,shc,t,callback){var ans=m*shc*t;if(typeof callback==="function"){callback(ans);return ans}return ans};thermal.cHeat=function(m,shc,t1,t2,callback){var ans=m*shc*basic.changein(t1,t2);if(typeof callback==="function"){callback(ans);return ans}return ans};thermal.latentHeat=function(m,l,callback){var ans=m*l;if(typeof callback==="function"){callback(ans);return ans}return ans};thermal.idealGasPV=function(n,t,callback){var ans=n*constant.GasConstant*t;if(typeof callback==="function"){callback(ans);return ans}return ans};thermal.work=function(p,v,callback){var ans=p*v;if(typeof callback==="function"){callback(ans);return ans}return ans};thermal.cWork=function(p,v1,v2,callback){var ans=p*basic.changein(v1,v2);if(typeof callback==="function"){callback(ans);return ans}return ans};thermal.heatChange=function(u,w,callback){var ans=u+w;if(typeof callback==="function"){callback(ans);return ans}return ans};thermal.cHeatChange=function(u1,u2,w,callback){var ans=basic.changein(u1,u2)+w;if(typeof callback==="function"){callback(ans);return ans}return ans}},{"./basic":6,"./constants/constants":7,"./constants/multiplier":8,"./constants/units":10}],15:[function(require,module,exports){var constant=require("./constants/constants");var units=require("./constants/units");var multiplier=require("./constants/multiplier");var basic=require("./basic");var wave=exports;wave.angularFrequency=function(T,callback){var ans=2*Math.Pi/T;if(typeof callback==="function",callback){callback(ans);return ans}return ans};wave.displacement=function(m,w,t,callback){var ans=A*Math.sin(w*t);if(typeof callback==="function",callback){callback(ans);return ans}return ans};wave.velocity=function(w,A,t,callback){var ans=w*A*Math.cos(w*t);if(typeof callback==="function",callback){callback(ans);return ans}return ans};wave.acceleration=function(w,A,t,callback){var ans=-1*w^2*A*Math.sin(w*t);if(typeof callback==="function",callback){callback(ans);return ans}return ans};wave.kineticEnergy=function(m,w,A,x,callback){var ans=.5*m*w^2*(A^2-x^2);if(typeof callback==="function",callback){callback(ans);return ans}return ans};wave.potentialEnergy=function(m,w,x,callback){var ans=.5*m*w^2*x^2;if(typeof callback==="function",callback){callback(ans);return ans}return ans};wave.netEnergy=function(m,w,A,callback){var ans=.5*m*w^2*A^2;if(typeof callback==="function",callback){callback(ans);return ans}return ans};wave.waveSpeed=function(frequency,wavelength,callback){var ans=frequency*wavelength;if(typeof callback==="function",callback){callback(ans);return ans}return ans};wave.refractiveIndex=function(v1,v2,n1,callback){var ans=n1*v1/v2;if(typeof callback==="function",callback){callback(ans);return ans}return ans};wave.angularResolution=function(wavelength,d,callback){var ans=1.22*(wavelength/d);if(typeof callback==="function",callback){callback(ans);return ans}return ans};wave.beatFrequency=function(f1,f2,callback){var ans=Math.abs(f2-f1);if(typeof callback==="function",callback){callback(ans);return ans}return ans};wave.harmonicLen=function(L,n,callback){var ans=2*L/n;if(typeof callback==="function",callback){callback(ans);return ans}return ans};wave.harmonicFreq=function(v,L,n,callback){var ans=v/wave.harmonicLen(L,n);if(typeof callback==="function",callback){callback(ans);return ans}return ans}},{"./basic":6,"./constants/constants":7,"./constants/multiplier":8,"./constants/units":10}]},{},[5]);