/**
* electromagnetic.js
* http://github.com/abhiagarwal/phys.js
*
* Copyright 2013 Abhi Agarwal
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* (17 functions)
*/

electromagnetic = exports;

electromagnetic.KineticEnergy = function(){
	return ("Kinetic Energy\n" +
			"Inputs: Mass, Velocity\n" +
			"Kinetic Energy = (1/2) * (Mass * Velocity^2)" 
	);
};

electromagnetic.selfKineticEnergy = function(){
	return("Kinetic Energy\n" +
			"Input: Mass, Velocity \n" +
			"Does not square velocity: You have to yourself.\n" +
			"Kinetic Energy = (1/2) * (Mass * Velocity)" 
	);
};

electromagnetic.current = function(){
	return("Rate at which charge flows through a given surface\n" +
			"Input: Charge One, Charge Two, Time One, Time Two\n" +
			"Current = (Charge Two - Charge One) / (Time2 - Time1)" 
	);
};

electromagnetic.ohmicResistance = function(){
	return("Resistance of an Ohmic resistor\n" +
			"Input: Voltage, Current\n" +
			"Resistance = Voltage / Current" 
	);
};

electromagnetic.resistivity = function(){
	return("Resistivity - tendancy of a material to resist charge\n" +
			"Input: Resistance, Cross-sectional area, Length\n" +
			"Resistivity = Resistance * Area / Length" 
	);
};

electromagnetic.viPower = function(){
	return("Power - Energy consumed per unit time\n" +
			"Input: Voltage, Current\n" +
			"Power = Voltage * Current" 
	);
};

electromagnetic.irPower = function(){
	return("Power - Energy consumed per unit time\n" +
			"Input: Current, Resistance\n" +
			"Power = (Current^2) * Resistance" 
	);
};

electromagnetic.selfirPower = function(){
	return("Calculated Power - Energy consumed per unit time\n" +
			"Input: Current, Resistance\n" +
			"Does not square current: You have to yourself.\n" + 
			"Power = (Current) * Resistance" 
	);
};

electromagnetic.vPower = function(){
	return("Power - Energy consumed per unit time\n" +
			"Input: Voltage, Resistance\n" +
			"Power = (Voltage^2) / Resistance" 
	);
};

electromagnetic.selfvPower = function(){
	return("Calculated Power - Energy consumed per unit time\n" +
			"Input: Voltage, Resistance\n" +
			"Does not square voltage: You have to yourself.\n" + 
			"Power = (Voltage) / Resistance" 
	);
};

electromagnetic.emf = function(){
	return("Electromotive Force - Voltage generated by a battery\n" +
			"Input: Current, Resistance, Internal resistance of battery\n" +
			"Electromotive Force = Current * (Resistance + Internal resistance of battery)" 
	);
};

electromagnetic.series = function(){
	return("Sum of resistance components connected in series\n" +
			"Input: Array of resistance values\n" +
			"Sum of resistance components = (Adding all resistances in the Array)" 
	);
};

electromagnetic.parallel = function(){
	return("Sum of resistance components connected in parallel\n" +
			"Input: Array of resistance values\n" +
			"Sum of resistance components = 1 / (Adding all resistances in the Array)" 
	);
};

electromagnetic.fluxComponent = function(){
	return("Component of B-field passing through a surface area A at an angle\n" +
			"Input: B-field Strength, Surface area of surface, Angle (Degrees)\n" +
			"Magnetic Flux = B-field Strength * Surface area of surface * cos(Angle)" 
	);
};

electromagnetic.inducedEmf = function(){
	return("Induced voltage by moving a rod of length l through a B-field of velocity v\n" +
			"Input: B-field Strength, Velocity of rod, Length\n" +
			"inducedEmf = B-field Strength * Velocity * Length" 
	);
};

electromagnetic.gauss = function(){
	return("Gauss' Law: Rate of flow of electric field (Electric flux) through a closed surface with an arbitrary volume\n" +
			"Input: Total charge enclosed within the surface, Coulomb constant\n" +
			"guassFlux = Total charge enclosed within the surface / Coulomb constant " 
	);
};

electromagnetic.coilEmf = function(){
	return("Faraday's Law: Induced emf generated by moving coil in B-field\n" +
			"Input: Number of turns in coil, 2 Magnetic fluxs (magFlux1, magFlux 2), 2 Time intervals (t1, t2)\n" +
			"coilEmf = - (Number of turns in coil) * ((magFlux2 - magFlux1) / (time2 - time1))" 
	);
};